# Use Ubuntu@14.04 as our box image
# https://hub.docker.com/_/ubuntu/
box: ubuntu:14.04

# Define our build steps (e.g. test steps)
build:
  steps:
    # Install server dependencies (e.g. Redis, PostgreSQL)
    - script:
        name: install server dependencies
        code: |
          # Updated our `apt-cache`
          sudo apt-get update

          # Install Node.js' apt repository
          sudo apt-get install -y curl
          curl -sL https://deb.nodesource.com/setup_4.x | sudo bash -

          # Install our apt-based dependencies
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/common/recipes/default.rb#L178-L181
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/common/recipes/default.rb#L189-L195
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/common/recipes/default.rb#L302-L308
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/findwork.co/recipes/default.rb#L4-L16
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/findwork.co/recipes/default.rb#L18-L19
          sudo apt-get install -y \
            redis-server=2:2.8.4-2 \
            postgresql-9.3=9.3.14-0ubuntu0.14.04 \
            postgresql-server-dev-9.3=9.3.14-0ubuntu0.14.04 \
            build-essential make openssl python-dev \
            nodejs=4.5.0-1nodesource1~trusty1 \
            git


    # Configure PostgreSQL to match our server
    # DEV: Ideally we would reuse the container from Wercker's test builds
    #   However, that costs $2/month at the moment and would burn unnecessary development time
    - script:
        name: configure postgresql
        code: |
          # Move to port 5500 and restart our server
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/common/recipes/default.rb#L207-L229
          echo "port = 5500" >> /etc/postgresql/9.3/main/postgresql.conf
          sudo /etc/init.d/postgresql restart 9.3

          # Add our PostgreSQL user
          # https://github.com/twolfson/find-work-scripts/blob/37226968805c9390ca948594d04eb8974b72bbb6/src/cookbooks/findwork.co/recipes/postgresql-add-user-find-work.sh
          user="find_work"
          password="find_work"
          create_user_command="psql --command \"CREATE ROLE $user WITH LOGIN;\""
          sudo su postgres --shell /bin/bash --command "$create_user_command"
          set_user_password="psql --command \"ALTER ROLE $user WITH PASSWORD '$password';\""
          sudo su postgres --shell /bin/bash --command "$set_user_password"

    # Output our Node.js and npm versions
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

    # Configure npm and bower to allow root scripts
    - script:
        name: enable root/sudo for npm/bower
        code: |
          # https://docs.npmjs.com/misc/config#unsafe-perm
          npm config set unsafe-perm true
          # https://github.com/bower/bower/issues/1752#issuecomment-113455403
          echo "{\"allow_root\": true}" > ~/.bowerrc

    # Install our dependencies and dev dependencies
    # DEV: We use this over `step-npm-install` to gain single step bootstrapping
    #   https://github.com/wercker/step-npm-install/blob/082879a7d314754b3ee5aecf41f7234ecb6a3b78/run.sh
    - script:
        name: run bootstrap.sh
        code: |
          # Create our cache
          # https://github.com/wercker/step-npm-install/blob/082879a7d314754b3ee5aecf41f7234ecb6a3b78/run.sh#L16-L22
          mkdir -p "$WERCKER_CACHE_DIR/wercker/npm"
          npm config set cache "$WERCKER_CACHE_DIR/wercker/npm"

          # If we fail to bootstrap
          if ! CONFIG_COPY_ONLY=TRUE bin/bootstrap.sh; then
            # Clear our cache
            # https://github.com/wercker/step-npm-install/blob/082879a7d314754b3ee5aecf41f7234ecb6a3b78/run.sh#L24-L32
            npm cache clear
            mkdir -p "$WERCKER_CACHE_DIR/wercker/npm"
            printf keep > "$WERCKER_CACHE_DIR/wercker/npm/.keep"

            # Exit as a failure
            # https://github.com/wercker/step-npm-install/blob/082879a7d314754b3ee5aecf41f7234ecb6a3b78/run.sh#L37-L42
            exit 1
          fi

    # Provision our test database (depends on `sequelize` being installed)
    - script:
        name: provision test database
        code: |
          bin/reset-test-db.sh

    # Run our tests
    - npm-test@0.0.3
