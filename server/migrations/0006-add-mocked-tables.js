// Load in our dependencies
var Promise = require('bluebird');
var Sequelize = require('./utils/sequelize');
var baseDefine = Sequelize;

// Define our migrations
// http://docs.sequelizejs.com/en/v3/docs/migrations/
// DEV: `createTable` doesn't support adding indicies so we do that separately
//   https://github.com/sequelize/sequelize/blob/v3.28.0/lib/dialects/postgres/query-generator.js#L38-L94
exports.up = function (queryInterface) {
  return queryInterface.sequelize.transaction(function (t) { return Promise.all([
    // DEV: We must perform table creation in order such that foreign keys are always satisfied
    queryInterface.createTable('reminders', {
      id: {type: baseDefine.ID, defaultValue: Sequelize.UUIDV4, primaryKey: true},
      candidate_id: {
        type: baseDefine.ID, allowNull: false,
        references: {model: 'candidates', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'candidates', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'CASCADE'
      },
      parent_id: {type: baseDefine.ID, allowNull: false},
      parent_type: {type: Sequelize.STRING(36), allowNull: false},
      type: {type: Sequelize.STRING(36), allowNull: false},
      date_time_moment: {type: baseDefine.MOMENT_TZ, allowNull: false},
      is_enabled: {type: Sequelize.BOOLEAN, allowNull: false},
      // DEV: Original type no longer defined
      // sent_at_moment: {type: baseDefine.MOMENT_DATEONLY, defaultValue: null, allowNull: true},
      sent_at_date: {type: Sequelize.DATE, defaultValue: null, allowNull: true},

      // Manually add timestamps (sequelize-cli doesn't inherit options)
      // https://github.com/sequelize/sequelize/blob/v3.25.0/lib/model.js#L191-L204
      created_at: {type: Sequelize.DATE, allowNull: false, _autoGenerated: true},
      updated_at: {type: Sequelize.DATE, allowNull: false, _autoGenerated: true}
    }, {transaction: t}),
    queryInterface.createTable('applications', {
      id: {type: baseDefine.ID, defaultValue: Sequelize.UUIDV4, primaryKey: true},
      candidate_id: {
        type: baseDefine.ID, allowNull: false,
        references: {model: 'candidates', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'candidates', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'CASCADE'
      },
      // DEV: Original type no longer defined
      // application_date_moment: {type: baseDefine.MOMENT_DATEONLY, defaultValue: null, allowNull: true},
      // archived_at_moment: {type: baseDefine.MOMENT_DATEONLY, defaultValue: null, allowNull: true},
      application_date_date: {type: Sequelize.DATE, defaultValue: null, allowNull: true},
      archived_at_date: {type: Sequelize.DATE, defaultValue: null, allowNull: true},
      company_name: {type: Sequelize.STRING(255), defaultValue: '', allowNull: false},
      name: {type: Sequelize.STRING(255), allowNull: false},
      notes: {type: Sequelize.STRING(64 * 1024) /* 64kb */, defaultValue: '', allowNull: false},
      posting_url: {type: Sequelize.STRING(1024), defaultValue: '', allowNull: false},
      status: {type: Sequelize.STRING(36), allowNull: false},

      saved_for_later_reminder_id: {
        type: baseDefine.ID, allowNull: true,
        references: {model: 'reminders', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'reminders', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'RESTRICT'
      },
      waiting_for_response_reminder_id: {
        type: baseDefine.ID, allowNull: true,
        references: {model: 'reminders', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'reminders', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'RESTRICT'
      },
      received_offer_reminder_id: {
        type: baseDefine.ID, allowNull: true,
        references: {model: 'reminders', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'reminders', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'RESTRICT'
      },

      // Manually add timestamps (sequelize-cli doesn't inherit options)
      // https://github.com/sequelize/sequelize/blob/v3.25.0/lib/model.js#L191-L204
      created_at: {type: Sequelize.DATE, allowNull: false, _autoGenerated: true},
      updated_at: {type: Sequelize.DATE, allowNull: false, _autoGenerated: true}
    }, {transaction: t}),
    queryInterface.createTable('interviews', {
      id: {type: baseDefine.ID, defaultValue: Sequelize.UUIDV4, primaryKey: true},
      candidate_id: {
        type: baseDefine.ID, allowNull: false,
        references: {model: 'candidates', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'candidates', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'CASCADE'
      },
      application_id: {
        type: baseDefine.ID, allowNull: false,
        references: {model: 'applications', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'applications', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'CASCADE'
      },

      date_time_moment: {type: baseDefine.MOMENT_TZ, allowNull: false},
      details: {type: Sequelize.STRING(1024), allowNull: false},

      pre_interview_reminder_id: {
        type: baseDefine.ID, allowNull: false,
        references: {model: 'reminders', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'reminders', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'RESTRICT'
      },
      post_interview_reminder_id: {
        type: baseDefine.ID, allowNull: false,
        references: {model: 'reminders', key: 'id'}
        // Missed `deferrable` and `onUpdate/onDelete` settings initially
        // references: {model: 'reminders', key: 'id', deferrable: Sequelize.Deferrable.INITIALLY_DEFERRED},
        // onUpdate: 'CASCADE', onDelete: 'RESTRICT'
      },

      // Manually add timestamps (sequelize-cli doesn't inherit options)
      // https://github.com/sequelize/sequelize/blob/v3.25.0/lib/model.js#L191-L204
      created_at: {type: Sequelize.DATE, allowNull: false, _autoGenerated: true},
      updated_at: {type: Sequelize.DATE, allowNull: false, _autoGenerated: true}
    }, {transaction: t})
  ]); });
};
exports.down = function (queryInterface) {
  return queryInterface.sequelize.transaction(function (t) { return Promise.all([
    queryInterface.dropTable('interviews', {transaction: t}),
    queryInterface.dropTable('applications', {transaction: t}),
    queryInterface.dropTable('reminders', {transaction: t})
  ]); });
};
